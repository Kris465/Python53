def convert_base(number, from_base, to_base):
    """
    Конвертирует число между системами счисления

    Args:
        number: число как строка (например, "255", "1010")
        from_base: исходная система счисления (2-36)
        to_base: целевая система счисления (2-36)

    Returns:
        Число в новой системе счисления как строка
    """
    try:
        # Сначала переводим в десятичную систему с помощью int()
        # int(number, from_base) преобразует строку в число в указанной системе
        decimal_num = int(number, from_base)

        # Если целевая система - десятичная, просто возвращаем результат
        if to_base == 10:
            return str(decimal_num)

        # Для перевода в другие системы используем алгоритм деления
        result = ""

        # Строка с символами для систем счисления до 36
        digits = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"

        n = decimal_num
        # Продолжаем делить пока число не станет 0
        while n > 0:
            # Остаток от деления - это цифра в новой системе
            remainder = n % to_base
            # Берем соответствующий символ из строки digits
            result = digits[remainder] + result
            # Делим число на основание новой системы
            n //= to_base

        # Если результат пустой (число было 0), возвращаем "0"
        return result if result else "0"

    except ValueError:
        return "Ошибка: некорректное число или система счисления"


if __name__ == "__main__":
    print("=== Конвертер систем счисления ===\n")

    # Из десятичной в шестнадцатеричную
    print("255 (10 → 16):", convert_base("255", 10, 16))
    # Объяснение: 255 в HEX = FF

    # Из двоичной в десятичную
    print("1010 (2 → 10):", convert_base("1010", 2, 10))
    # Объяснение: 1010 в двоичной = 10 в десятичной

    # Из десятичной в двоичную
    print("10 (10 → 2):", convert_base("10", 10, 2))

    # Из шестнадцатеричной в десятичную
    print("FF (16 → 10):", convert_base("FF", 16, 10))

    # Тест с ошибкой
    print("\nТест с ошибкой (некорректное число):")
    print(convert_base("XYZ", 10, 2))
